// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace UI.AutomationTests.CodedUITests
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1 - Use 'RecordedMethod1Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinWindow uIUIAutomationTestWindWindow = this.UIUIAutomationTestWindWindow;
            WpfMenuItem uIFileMenuItem = this.UIUIAutomationTestWindWindow1.UIItemMenu.UIFileMenuItem;
            WpfMenuItem uIToolsMenuItem = this.UIUIAutomationTestWindWindow1.UIItemMenu.UIToolsMenuItem;
            WpfMenuItem uIItem1MenuItem = this.UIUIAutomationTestWindWindow1.UIItemMenu.UIItem1MenuItem;
            WpfMenuItem uIItem2MenuItem = this.UIUIAutomationTestWindWindow1.UIItemMenu.UIItem2MenuItem;
            WpfMenuItem uIItem3MenuItem = this.UIUIAutomationTestWindWindow1.UIItemMenu.UIItem3MenuItem;
            WpfMenuItem uIItem4MenuItem = this.UIUIAutomationTestWindWindow1.UIItemMenu.UIItem4MenuItem;
            WpfListItem uIItem1ListItem = this.UIUIAutomationTestWindWindow1.UIMainListViewList.UIItem1ListItem;
            WpfEdit uITextBoxAEdit = this.UIUIAutomationTestWindWindow1.UITextBoxAEdit;
            WpfEdit uITextBoxBEdit = this.UIUIAutomationTestWindWindow1.UITextBoxBEdit;
            WpfEdit uITextBoxCEdit = this.UIUIAutomationTestWindWindow1.UITextBoxCEdit;
            WpfRadioButton uIARadioButton = this.UIUIAutomationTestWindWindow1.UIARadioButton;
            WpfRadioButton uIBRadioButton = this.UIUIAutomationTestWindWindow1.UIBRadioButton;
            WpfRadioButton uICRadioButton = this.UIUIAutomationTestWindWindow1.UICRadioButton;
            WpfButton uIClickButton = this.UIUIAutomationTestWindWindow1.UIClickButton;
            #endregion

            // Last mouse action was not recorded.

            // Type '{Tab}' in 'UI Automation Test Window' window
            Keyboard.SendKeys(uIUIAutomationTestWindWindow, this.RecordedMethod1Params.UIUIAutomationTestWindWindowSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'File' menu item
            Keyboard.SendKeys(uIFileMenuItem, this.RecordedMethod1Params.UIFileMenuItemSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'Tools' menu item
            Keyboard.SendKeys(uIToolsMenuItem, this.RecordedMethod1Params.UIToolsMenuItemSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'item1' menu item
            Keyboard.SendKeys(uIItem1MenuItem, this.RecordedMethod1Params.UIItem1MenuItemSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'item2' menu item
            Keyboard.SendKeys(uIItem2MenuItem, this.RecordedMethod1Params.UIItem2MenuItemSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'item3' menu item
            Keyboard.SendKeys(uIItem3MenuItem, this.RecordedMethod1Params.UIItem3MenuItemSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'item4' menu item
            Keyboard.SendKeys(uIItem4MenuItem, this.RecordedMethod1Params.UIItem4MenuItemSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'item1' list item
            Keyboard.SendKeys(uIItem1ListItem, this.RecordedMethod1Params.UIItem1ListItemSendKeys, ModifierKeys.None);

            // Type '12' in 'textBoxA' text box
            uITextBoxAEdit.Text = this.RecordedMethod1Params.UITextBoxAEditText;

            // Type '{Tab}' in 'textBoxA' text box
            Keyboard.SendKeys(uITextBoxAEdit, this.RecordedMethod1Params.UITextBoxAEditSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'textBoxB' text box
            Keyboard.SendKeys(uITextBoxBEdit, this.RecordedMethod1Params.UITextBoxBEditSendKeys, ModifierKeys.None);

            // Type 'Shift + {Tab}' in 'textBoxC' text box
            Keyboard.SendKeys(uITextBoxCEdit, this.RecordedMethod1Params.UITextBoxCEditSendKeys, ModifierKeys.Shift);

            // Type '122' in 'textBoxB' text box
            uITextBoxBEdit.Text = this.RecordedMethod1Params.UITextBoxBEditText;

            // Type '{Tab}' in 'textBoxB' text box
            Keyboard.SendKeys(uITextBoxBEdit, this.RecordedMethod1Params.UITextBoxBEditSendKeys1, ModifierKeys.None);

            // Type '{Tab}' in 'textBoxC' text box
            Keyboard.SendKeys(uITextBoxCEdit, this.RecordedMethod1Params.UITextBoxCEditSendKeys1, ModifierKeys.None);

            // Type '{Tab}' in 'A' radio button
            Keyboard.SendKeys(uIARadioButton, this.RecordedMethod1Params.UIARadioButtonSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'B' radio button
            Keyboard.SendKeys(uIBRadioButton, this.RecordedMethod1Params.UIBRadioButtonSendKeys, ModifierKeys.None);

            // Type '{Tab}' in 'C' radio button
            Keyboard.SendKeys(uICRadioButton, this.RecordedMethod1Params.UICRadioButtonSendKeys, ModifierKeys.None);

            // Type '{Space}' in 'Click' button
            Keyboard.SendKeys(uIClickButton, this.RecordedMethod1Params.UIClickButtonSendKeys, ModifierKeys.None);
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public UIUIAutomationTestWindWindow UIUIAutomationTestWindWindow
        {
            get
            {
                if ((this.mUIUIAutomationTestWindWindow == null))
                {
                    this.mUIUIAutomationTestWindWindow = new UIUIAutomationTestWindWindow();
                }
                return this.mUIUIAutomationTestWindWindow;
            }
        }
        
        public UIUIAutomationTestWindWindow1 UIUIAutomationTestWindWindow1
        {
            get
            {
                if ((this.mUIUIAutomationTestWindWindow1 == null))
                {
                    this.mUIUIAutomationTestWindWindow1 = new UIUIAutomationTestWindWindow1();
                }
                return this.mUIUIAutomationTestWindWindow1;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private UIUIAutomationTestWindWindow mUIUIAutomationTestWindWindow;
        
        private UIUIAutomationTestWindWindow1 mUIUIAutomationTestWindWindow1;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Type '{Tab}' in 'UI Automation Test Window' window
        /// </summary>
        public string UIUIAutomationTestWindWindowSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'File' menu item
        /// </summary>
        public string UIFileMenuItemSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'Tools' menu item
        /// </summary>
        public string UIToolsMenuItemSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'item1' menu item
        /// </summary>
        public string UIItem1MenuItemSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'item2' menu item
        /// </summary>
        public string UIItem2MenuItemSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'item3' menu item
        /// </summary>
        public string UIItem3MenuItemSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'item4' menu item
        /// </summary>
        public string UIItem4MenuItemSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'item1' list item
        /// </summary>
        public string UIItem1ListItemSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '12' in 'textBoxA' text box
        /// </summary>
        public string UITextBoxAEditText = "12";
        
        /// <summary>
        /// Type '{Tab}' in 'textBoxA' text box
        /// </summary>
        public string UITextBoxAEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'textBoxB' text box
        /// </summary>
        public string UITextBoxBEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type 'Shift + {Tab}' in 'textBoxC' text box
        /// </summary>
        public string UITextBoxCEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '122' in 'textBoxB' text box
        /// </summary>
        public string UITextBoxBEditText = "122";
        
        /// <summary>
        /// Type '{Tab}' in 'textBoxB' text box
        /// </summary>
        public string UITextBoxBEditSendKeys1 = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'textBoxC' text box
        /// </summary>
        public string UITextBoxCEditSendKeys1 = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'A' radio button
        /// </summary>
        public string UIARadioButtonSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'B' radio button
        /// </summary>
        public string UIBRadioButtonSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Tab}' in 'C' radio button
        /// </summary>
        public string UICRadioButtonSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '{Space}' in 'Click' button
        /// </summary>
        public string UIClickButtonSendKeys = "{Space}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIUIAutomationTestWindWindow : WinWindow
    {
        
        public UIUIAutomationTestWindWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "UI Automation Test Window";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("UI Automation Test Window");
            #endregion
        }
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIUIAutomationTestWindWindow1 : WpfWindow
    {
        
        public UIUIAutomationTestWindWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "UI Automation Test Window";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("UI Automation Test Window");
            #endregion
        }
        
        #region Properties
        public UIItemMenu UIItemMenu
        {
            get
            {
                if ((this.mUIItemMenu == null))
                {
                    this.mUIItemMenu = new UIItemMenu(this);
                }
                return this.mUIItemMenu;
            }
        }
        
        public UIMainListViewList UIMainListViewList
        {
            get
            {
                if ((this.mUIMainListViewList == null))
                {
                    this.mUIMainListViewList = new UIMainListViewList(this);
                }
                return this.mUIMainListViewList;
            }
        }
        
        public WpfEdit UITextBoxAEdit
        {
            get
            {
                if ((this.mUITextBoxAEdit == null))
                {
                    this.mUITextBoxAEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITextBoxAEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "textBoxA";
                    this.mUITextBoxAEdit.WindowTitles.Add("UI Automation Test Window");
                    #endregion
                }
                return this.mUITextBoxAEdit;
            }
        }
        
        public WpfEdit UITextBoxBEdit
        {
            get
            {
                if ((this.mUITextBoxBEdit == null))
                {
                    this.mUITextBoxBEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITextBoxBEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "textBoxB";
                    this.mUITextBoxBEdit.WindowTitles.Add("UI Automation Test Window");
                    #endregion
                }
                return this.mUITextBoxBEdit;
            }
        }
        
        public WpfEdit UITextBoxCEdit
        {
            get
            {
                if ((this.mUITextBoxCEdit == null))
                {
                    this.mUITextBoxCEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUITextBoxCEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "textBoxC";
                    this.mUITextBoxCEdit.WindowTitles.Add("UI Automation Test Window");
                    #endregion
                }
                return this.mUITextBoxCEdit;
            }
        }
        
        public WpfRadioButton UIARadioButton
        {
            get
            {
                if ((this.mUIARadioButton == null))
                {
                    this.mUIARadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mUIARadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "radioButtonA";
                    this.mUIARadioButton.WindowTitles.Add("UI Automation Test Window");
                    #endregion
                }
                return this.mUIARadioButton;
            }
        }
        
        public WpfRadioButton UIBRadioButton
        {
            get
            {
                if ((this.mUIBRadioButton == null))
                {
                    this.mUIBRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mUIBRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "radioButtonB";
                    this.mUIBRadioButton.WindowTitles.Add("UI Automation Test Window");
                    #endregion
                }
                return this.mUIBRadioButton;
            }
        }
        
        public WpfRadioButton UICRadioButton
        {
            get
            {
                if ((this.mUICRadioButton == null))
                {
                    this.mUICRadioButton = new WpfRadioButton(this);
                    #region Search Criteria
                    this.mUICRadioButton.SearchProperties[WpfRadioButton.PropertyNames.AutomationId] = "radioButtonC";
                    this.mUICRadioButton.WindowTitles.Add("UI Automation Test Window");
                    #endregion
                }
                return this.mUICRadioButton;
            }
        }
        
        public WpfButton UIClickButton
        {
            get
            {
                if ((this.mUIClickButton == null))
                {
                    this.mUIClickButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIClickButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "clickButton";
                    this.mUIClickButton.WindowTitles.Add("UI Automation Test Window");
                    #endregion
                }
                return this.mUIClickButton;
            }
        }
        #endregion
        
        #region Fields
        private UIItemMenu mUIItemMenu;
        
        private UIMainListViewList mUIMainListViewList;
        
        private WpfEdit mUITextBoxAEdit;
        
        private WpfEdit mUITextBoxBEdit;
        
        private WpfEdit mUITextBoxCEdit;
        
        private WpfRadioButton mUIARadioButton;
        
        private WpfRadioButton mUIBRadioButton;
        
        private WpfRadioButton mUICRadioButton;
        
        private WpfButton mUIClickButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemMenu : WpfMenu
    {
        
        public UIItemMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("UI Automation Test Window");
            #endregion
        }
        
        #region Properties
        public WpfMenuItem UIFileMenuItem
        {
            get
            {
                if ((this.mUIFileMenuItem == null))
                {
                    this.mUIFileMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mUIFileMenuItem.SearchProperties[WpfMenuItem.PropertyNames.Name] = "File";
                    this.mUIFileMenuItem.WindowTitles.Add("UI Automation Test Window");
                    #endregion
                }
                return this.mUIFileMenuItem;
            }
        }
        
        public WpfMenuItem UIToolsMenuItem
        {
            get
            {
                if ((this.mUIToolsMenuItem == null))
                {
                    this.mUIToolsMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mUIToolsMenuItem.SearchProperties[WpfMenuItem.PropertyNames.Name] = "Tools";
                    this.mUIToolsMenuItem.WindowTitles.Add("UI Automation Test Window");
                    #endregion
                }
                return this.mUIToolsMenuItem;
            }
        }
        
        public WpfMenuItem UIItem1MenuItem
        {
            get
            {
                if ((this.mUIItem1MenuItem == null))
                {
                    this.mUIItem1MenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mUIItem1MenuItem.SearchProperties[WpfMenuItem.PropertyNames.Name] = "item1";
                    this.mUIItem1MenuItem.WindowTitles.Add("UI Automation Test Window");
                    #endregion
                }
                return this.mUIItem1MenuItem;
            }
        }
        
        public WpfMenuItem UIItem2MenuItem
        {
            get
            {
                if ((this.mUIItem2MenuItem == null))
                {
                    this.mUIItem2MenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mUIItem2MenuItem.SearchProperties[WpfMenuItem.PropertyNames.Name] = "item2";
                    this.mUIItem2MenuItem.WindowTitles.Add("UI Automation Test Window");
                    #endregion
                }
                return this.mUIItem2MenuItem;
            }
        }
        
        public WpfMenuItem UIItem3MenuItem
        {
            get
            {
                if ((this.mUIItem3MenuItem == null))
                {
                    this.mUIItem3MenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mUIItem3MenuItem.SearchProperties[WpfMenuItem.PropertyNames.Name] = "item3";
                    this.mUIItem3MenuItem.WindowTitles.Add("UI Automation Test Window");
                    #endregion
                }
                return this.mUIItem3MenuItem;
            }
        }
        
        public WpfMenuItem UIItem4MenuItem
        {
            get
            {
                if ((this.mUIItem4MenuItem == null))
                {
                    this.mUIItem4MenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mUIItem4MenuItem.SearchProperties[WpfMenuItem.PropertyNames.Name] = "item4";
                    this.mUIItem4MenuItem.WindowTitles.Add("UI Automation Test Window");
                    #endregion
                }
                return this.mUIItem4MenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfMenuItem mUIFileMenuItem;
        
        private WpfMenuItem mUIToolsMenuItem;
        
        private WpfMenuItem mUIItem1MenuItem;
        
        private WpfMenuItem mUIItem2MenuItem;
        
        private WpfMenuItem mUIItem3MenuItem;
        
        private WpfMenuItem mUIItem4MenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMainListViewList : WpfList
    {
        
        public UIMainListViewList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfList.PropertyNames.AutomationId] = "mainListView";
            this.WindowTitles.Add("UI Automation Test Window");
            #endregion
        }
        
        #region Properties
        public WpfListItem UIItem1ListItem
        {
            get
            {
                if ((this.mUIItem1ListItem == null))
                {
                    this.mUIItem1ListItem = new WpfListItem(this);
                    #region Search Criteria
                    this.mUIItem1ListItem.SearchProperties[WpfListItem.PropertyNames.Name] = "item1";
                    this.mUIItem1ListItem.WindowTitles.Add("UI Automation Test Window");
                    #endregion
                }
                return this.mUIItem1ListItem;
            }
        }
        #endregion
        
        #region Fields
        private WpfListItem mUIItem1ListItem;
        #endregion
    }
}
